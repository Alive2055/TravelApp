import 'dart:io';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_database/firebase_database.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'package:project_3/model/packagemodel.dart';
import 'package:project_3/reusableComponent/CustomButton.dart';
import 'package:project_3/screens/Admin/navdrawer.dart';
import 'package:uuid/uuid.dart';

class AddProductScreen extends StatefulWidget {
  AddProductScreen({Key? key}) : super(key: key);

  @override
  State<AddProductScreen> createState() => _AddProductScreenState();
}

class _AddProductScreenState extends State<AddProductScreen> {
  var titleController = TextEditingController();
  var descriptionController = TextEditingController();
  var priceController = TextEditingController();

  String imageUrl = '';
  String id = Uuid().v4();

  File? image;
  pickImage() async {
    try {
      final image = await ImagePicker().pickImage(source: ImageSource.gallery);
      String uniqueid = DateTime.now().microsecondsSinceEpoch.toString();
      Reference reference = FirebaseStorage.instance.ref();
      Reference referenceImage = reference.child('product_Image_post');
      Reference referenceImageToUpload = referenceImage.child(uniqueid);
      try {
        await referenceImageToUpload.putFile(File(image!.path));
        imageUrl = await referenceImageToUpload.getDownloadURL();
      } catch (e) {
        print(e);
      }
      if (image != null) {
        setState(() {
          this.image = File(image.path);
        });
      }
    } catch (e) {
      print(e);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      drawer: NavDrawer(),
      appBar: AppBar(
        title: Text('add products'),
      ),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(25.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: [
              GestureDetector(
                onTap: () => pickImage(),
                child: Container(
                  width: 200,
                  height: 200,
                  decoration: BoxDecoration(
                      shape: BoxShape.rectangle,
                      border: Border.all(color: Colors.yellow)),
                  child: image != null
                      ? Image.file(
                          image!,
                          fit: BoxFit.fill,
                        )
                      : Center(child: Text('click pick an product image')),
                ),
              ),
              SizedBox(
                height: 20,
              ),
              TextField(
                decoration: InputDecoration(labelText: 'title'),
                controller: titleController,
              ),
              TextField(
                decoration: InputDecoration(labelText: 'description'),
                controller: descriptionController,
              ),
              TextField(
                decoration: InputDecoration(labelText: 'price'),
                controller: priceController,
              ),
              SizedBox(
                height: 40,
              ),
              CustomButton(
                text: 'submit',
                onPress: () {
                  final product = PackageModel(
                    pId: id,
                    title: titleController.text.toString(),
                    description: descriptionController.text.toString(),
                    img: imageUrl,
                    price: priceController.text.toString(),
                  );
                  addPosts(product);
                },
                color: Colors.yellow,
                height: 50,
                width: double.infinity,
              )
            ],
          ),
        ),
      ),
    );
  }

  void addPosts(PackageModel product) {
    final User? user = FirebaseAuth.instance.currentUser;
    String uid = user!.uid;
    var date = DateTime.now().toString();
    try {
      FirebaseFirestore.instance
          .collection('Allposts')
          .doc(id) // Use document ID generated by Firestore
          .set({
        'uId': uid,
        'pId':id,
        'uemail': user.email,
        'title': titleController.text.toString(),
        'description': descriptionController.text.toString(),
        'price': priceController.text.toString(),
        'img': imageUrl,
      });
    } catch (e) {
      print(e);
    }
  }

  // void addPosts(PackageModel product) {
  //   int date = DateTime.now().millisecondsSinceEpoch;
  //   try {
  //     final User? user = FirebaseAuth.instance.currentUser;
  //     String uid = user!.uid;
  //     final postRef = FirebaseDatabase.instance.ref().child('All_posts');
  //     final post = postRef.child(date.toString()).set({
  //       'uId': uid,
  //       'uemail': user.email,
  //       'Id': date, //post id
  //       'title': titleController.text.toString(),
  //       'description': descriptionController.text.toString(),
  //       'price': priceController.text.toString(),
  //       'img': imageUrl,
  //     });
  //     print(post);
  //   } catch (e) {
  //     print(e);
  //   }
  // }
}
